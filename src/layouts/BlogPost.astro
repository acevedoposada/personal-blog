---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Header from '../components/Header.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;

const slug = title.toLowerCase().split(' ').join('-');
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				@apply w-[calc(100%_-_2em)] max-w-full m-[0];
			}
			.hero-image {
				width: 100%;
				display: grid;
				position: relative;

				& img {
					grid-column: 1 / 2;
					grid-row: 1 / 2;

					&:first-child {
						z-index: 1;
					}

					&:last-child {
						opacity: 0;
						filter: blur(5rem);
						animation: fadeIn 1s ease forwards;
						animation-delay: 0.3s;
					}
				}
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-lighter));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}

			@keyframes fadeIn {
				from {
					opacity: 0;
					filter: blur(5rem);
				}
				to {
					opacity: 0.7;
					filter: blur(2.5rem);
				}
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{heroImage && (
						<Image
							width={1020}
							height={510}
							src={heroImage}
							alt=""
						/>
						<Image
							width={1020}
							height={510}
							src={heroImage}
							alt=""
						/>
					)}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={pubDate} />
							{
								updatedDate && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={updatedDate} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						<hr />
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
